package components

import (
	"strconv"
	"github.com/jexlor/votingapp/web/models"
)

templ CommentsPage(data models.CommentsPageData, csrfToken map[string]interface{}) {
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>Comments</title>
	<script src="https://unpkg.com/htmx.org@1.9.12"></script>
	<script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 text-gray-900 min-h-screen flex flex-col">

  <!-- Header -->
  <header class="bg-white border-b border-gray-200 shadow-sm w-full">
    <div class="px-4 py-3 flex justify-between items-center w-full">
      <h1 class="font-semibold text-lg">VotingApp</h1>
    </div>
  </header>

  <!-- Main Content -->
  <main class="flex-1 w-4/5 mx-auto flex flex-col gap-6 p-4">

    <!-- Add Comment Form -->
    <div class="bg-white rounded-2xl shadow p-5 w-full">
      <h3 class="text-lg font-semibold mb-3">Add Comment</h3>
      <form method="POST" action="/v1/comments" class="flex flex-col gap-3 w-full">
        <input type="hidden" name="csrf_token" value={ csrfToken["CSRFToken"].(string) }>

        if !data.HasCommented {
          <textarea 
            name="comment" 
            placeholder="Add your comment..." 
            class="w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-indigo-500 focus:outline-none resize-none min-h-[80px]"
          ></textarea>
          <button 
            type="submit" 
            class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition w-full">
            Submit
          </button>
        } else {
          <textarea 
            name="comment" 
            placeholder="Youâ€™ve already posted a comment." 
            disabled
            class="w-full border border-gray-200 bg-gray-100 rounded-lg px-3 py-2 text-sm resize-none min-h-[80px]"
          ></textarea>
          <button 
            type="submit" 
            disabled
            class="bg-gray-300 text-gray-500 px-4 py-2 rounded-lg cursor-not-allowed w-full">
            Submit
          </button>
        }
      </form>
    </div>

    <!-- Sort Buttons -->
    <div class="flex justify-start items-center gap-2 w-full">
      <button 
        class="bg-gray-200 hover:bg-indigo-500 hover:text-white text-gray-700 px-3 py-1 rounded-lg text-sm transition w-full md:w-auto"
        hx-get="/v1/comments?sort=liked"
        hx-target="body"
        hx-swap="outerHTML"
        hx-push-url="/v1/comments?sort=liked">
        Most Liked
      </button>
      <button 
        class="bg-gray-200 hover:bg-indigo-500 hover:text-white text-gray-700 px-3 py-1 rounded-lg text-sm transition w-full md:w-auto"
        hx-get="/v1/comments?sort=newest"
        hx-target="body"
        hx-swap="outerHTML"
        hx-push-url="/v1/comments?sort=newest">
        Newest
      </button>
    </div>

    <!-- Comments List -->
    <ul class="flex flex-col gap-4 w-full">
      for _, comment := range data.Comments {
        <li class="bg-white rounded-2xl shadow p-4 w-full">
          <div class="flex justify-between items-center mb-1 w-full">
            if comment.UserID == data.CurrentUserID {
              <span class="font-semibold text-indigo-600">User ID: { comment.UserID } (You)</span>
            } else {
              <span class="font-semibold text-gray-700">User ID: { comment.UserID }</span>
            }
          </div>

          <p class="text-sm text-gray-800 mb-3">{ comment.Comment }</p>

          <div class="flex items-center gap-3 text-gray-500 text-sm w-full">
            <form 
              hx-post="/v1/comments/react"
              hx-target={"#comment-" + strconv.Itoa(int(comment.ID)) + "-reactions"}
              hx-swap="outerHTML"
              class="flex items-center gap-2"
            >
              <input type="hidden" name="csrf_token" value={ csrfToken["CSRFToken"].(string) }>
              <input type="hidden" name="comment_id" value={strconv.Itoa(int(comment.ID))}>

              <button type="submit" name="reaction" value="1" class="hover:text-indigo-600">
                <i class="fa-solid fa-thumbs-up text-[16px]"></i>
              </button>
              <button type="submit" name="reaction" value="-1" class="hover:text-red-600">
                <i class="fa-solid fa-thumbs-down text-[16px]"></i>
              </button>
            </form>

            if comment.UserID == data.CurrentUserID {
              <form 
                method="POST" 
                action={templ.SafeURL("/v1/comments/" + strconv.Itoa(int(comment.ID)) + "/delete")}
                class="flex items-center"
              >
                <input type="hidden" name="csrf_token" value={ csrfToken["CSRFToken"].(string) }>
                <button type="submit" class="hover:text-red-500">
                  <i class="fa-solid fa-trash text-[16px]"></i>
                </button>
              </form>
            }

            <div id={"comment-" + strconv.Itoa(int(comment.ID)) + "-reactions"} class="ml-auto text-xs text-gray-500">
              {comment.Likes} <i class="fa-solid fa-thumbs-up inline w-3 h-3"></i> 
              {comment.Dislikes} <i class="fa-solid fa-thumbs-down inline w-3 h-3"></i>
            </div>
          </div>
        </li>
      }
    </ul>
  </main>

  <script src="https://kit.fontawesome.com/cf852e3d0e.js" crossorigin="anonymous"></script>
</body>

</html>
}

